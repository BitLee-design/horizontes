{"ast":null,"code":"var _jsxFileName = \"/workspace/horizontes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CssBaseline, Grid } from '@material-ui/core';\nimport { getPlacesData } from './api';\nimport Header from './components/Header/Header';\nimport List from './components/List/List';\nimport Map from './components/Map/Map';\nimport { PlaceDetails } from '../PlaceDetails/PlaceDetails';\nimport Places from './components/Places/Places';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    places,\n    setPlaces\n  } = useState([]);\n  const {\n    coordinates,\n    setCoordinates\n  } = useState({});\n  const {\n    bounds,\n    setBounds\n  } = useState({});\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(_ref => {\n      let {\n        coords: {\n          latitude,\n          longitude\n        }\n      } = _ref;\n      setCoordinates({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n  }, []);\n  useEffect(() => {\n    getPlacesData(bounds.sw, bounds.ne).then(data => {\n      console.log(data);\n      setPlaces(data);\n    });\n  }, [coordinates, bounds]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          places: places\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          setCoordinates: setCoordinates,\n          setBounds: setBounds,\n          coordinates: coordinates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"GGhuDg/RzUB8xTtAAcLUIcnG3kg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspace/horizontes/src/App.js"],"names":["React","useState","useEffect","CssBaseline","Grid","getPlacesData","Header","List","Map","PlaceDetails","Places","App","places","setPlaces","coordinates","setCoordinates","bounds","setBounds","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lat","lng","sw","ne","then","data","console","log","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,mBAAlC;AAEA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AAACa,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAACe,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,QAAuC;AAAA,UAAtC;AAAEC,QAAAA,MAAM,EAAE;AAACC,UAAAA,QAAD;AAAWC,UAAAA;AAAX;AAAV,OAAsC;AAC5ER,MAAAA,cAAc,CAAC;AAAES,QAAAA,GAAG,EAAEF,QAAP;AAAiBG,QAAAA,GAAG,EAAEF;AAAtB,OAAD,CAAd;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMArB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,aAAa,CAACW,MAAM,CAACU,EAAR,EAAYV,MAAM,CAACW,EAAnB,CAAb,CACKC,IADL,CACWC,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAhB,MAAAA,SAAS,CAACgB,IAAD,CAAT;AACH,KAJL;AAKH,GANQ,EAMN,CAACf,WAAD,EAAcE,MAAd,CANM,CAAT;AAQA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE;AAAT,OAAnC;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,MAAM,EAAEpB;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACI,QAAC,GAAD;AACI,UAAA,cAAc,EAAEG,cADpB;AAEI,UAAA,SAAS,EAAEE,SAFf;AAGI,UAAA,WAAW,EAAEH;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAkBH,CAtCD;;GAAMH,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CssBaseline, Grid } from '@material-ui/core';\r\n\r\nimport { getPlacesData } from './api';\r\nimport Header from './components/Header/Header';\r\nimport List from './components/List/List';\r\nimport Map from './components/Map/Map';\r\nimport { PlaceDetails } from '../PlaceDetails/PlaceDetails';\r\nimport Places from './components/Places/Places';\r\n\r\nconst App = () => {\r\n    const {places, setPlaces} = useState([]);\r\n\r\n    const {coordinates, setCoordinates} = useState({});\r\n    const {bounds, setBounds} = useState({});\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(({ coords: {latitude, longitude} }) => {\r\n            setCoordinates({ lat: latitude, lng: longitude});\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getPlacesData(bounds.sw, bounds.ne)\r\n            .then((data) => {\r\n                console.log(data);\r\n                setPlaces(data);\r\n            })\r\n    }, [coordinates, bounds]);\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Header />\r\n            <Grid container spacing={3} style={{ width: '100%'}}>\r\n                <Grid item xs={12} md={4}>\r\n                    <List places={places}/>\r\n                </Grid>                \r\n                <Grid item xs={12} md={4}>\r\n                    <Map\r\n                        setCoordinates={setCoordinates}\r\n                        setBounds={setBounds}\r\n                        coordinates={coordinates}\r\n                    />\r\n                </Grid>                \r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}