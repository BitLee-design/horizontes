{"ast":null,"code":"var _jsxFileName = \"/workspace/horizontes/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { GoogleMapReact } from \"google-map-react\";\nimport { Paper, Typography, useMediaQuery } from '@mateial-ui/core';\nimport LocationOnOutlinedIcon from \"@material-ui/icons/locationOnOutlined\";\nimport { Rating } from \"@material-ui/lab/Rating\";\nimport useStyles from './styles';\nimport { Image } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    setCoordinates,\n    setBounds,\n    coordinates,\n    places,\n    childClicked\n  } = _ref;\n  const classes = useStyles();\n  const isMobile = useMediaQuery('(min-width:600px)');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"classes.mapContainer\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      children: [\"bootstrapURLKeys=\", {\n        key: 'AIzaSyDBofYLbkqHGxrhHaUMp7zr2B4J9ZE0l0Y'\n      }, \"defaultCenter=\", coordinates, \"center=\", coordinates, \"defaultZoom=\", 14, \"margin=\", [50, 50, 50, 50], \"options=\", '', \"onChange=\", e => {\n        setCoordinates({\n          lat: e.center.lat,\n          lng: e.center.lng\n        });\n        setBounds({\n          ne: e.marginBounds.ne,\n          sw: e.marginBounds.sw\n        });\n      }, \"onChildClick=\", places === null || places === void 0 ? void 0 : places.map((place, i) => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: classes.markerContainer,\n          lat: Number(place.latitude),\n          lng: Number(place.langitude),\n          children: isMobile ? /*#__PURE__*/_jsxDEV(LocationOnOutlinedIcon, {\n            color: \"primary\",\n            \"font-size\": \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n            elevetion: 3,\n            className: classes.paper,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.typography,\n              variant: \"subtitle2\",\n              guttorButton: true,\n              children: place.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              className: classes.pointer,\n              src: place.photo ? place.photos.images.url : 'https://',\n              alt: place.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              size: \"small\",\n              value: Number(place.rating),\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"Y5K8nwGv58Nd2ZhEQmPFxv40Uu0=\", false, function () {\n  return [useStyles, useMediaQuery];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/workspace/horizontes/src/components/Map/Map.jsx"],"names":["React","GoogleMapReact","Paper","Typography","useMediaQuery","LocationOnOutlinedIcon","Rating","useStyles","Image","Map","setCoordinates","setBounds","coordinates","places","childClicked","classes","isMobile","key","e","lat","center","lng","ne","marginBounds","sw","map","place","i","markerContainer","Number","latitude","langitude","paper","typography","name","pointer","photo","photos","images","url","rating"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { GoogleMapReact } from \"google-map-react\";\r\nimport { Paper, Typography, useMediaQuery } from '@mateial-ui/core';\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/locationOnOutlined\";\r\nimport { Rating } from \"@material-ui/lab/Rating\";\r\n\r\nimport useStyles from './styles';\r\nimport { Image } from \"@material-ui/icons\";\r\n\r\nconst Map = ({ setCoordinates, setBounds, coordinates, places, childClicked }) => {\r\n    const classes = useStyles();\r\n    const isMobile = useMediaQuery('(min-width:600px)');\r\n    \r\n    return (\r\n        <div className=\"classes.mapContainer\">\r\n            <GoogleMapReact>\r\n                bootstrapURLKeys={{ key: 'AIzaSyDBofYLbkqHGxrhHaUMp7zr2B4J9ZE0l0Y'}}\r\n                defaultCenter={coordinates}\r\n                center={coordinates}\r\n                defaultZoom={14}\r\n                margin={[50, 50, 50, 50]}\r\n                options={''}\r\n                onChange={(e) =>{\r\n                    setCoordinates({ lat: e.center.lat, lng: e.center.lng });\r\n                    setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw});\r\n                }}\r\n                onChildClick={}\r\n\r\n                {places?.map((place, i) => {\r\n                    <div className={classes.markerContainer} lat={Number(place.latitude)} lng={Number(place.langitude)} key={i}>\r\n                        {\r\n                            isMobile ? (\r\n                                <LocationOnOutlinedIcon color=\"primary\" font-size=\"large\" />\r\n                            ) : (\r\n                                <Paper elevetion={3} className={classes.paper}>\r\n                                    <Typography className={classes.typography} variant=\"subtitle2\" guttorButton>\r\n                                        {place.name}\r\n                                    </Typography>\r\n                                    <Image className={classes.pointer} src={place.photo ? place.photos.images.url : 'https://'} alt={place.name} />\r\n                                    <Rating size=\"small\" value={Number(place.rating)} readOnly />\r\n                                </Paper>\r\n                            )\r\n                        }\r\n                    </div>\r\n                })}\r\n                \r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}