{"ast":null,"code":"import React,{useState,useEffect}from'react';import{CssBaseline,Grid}from'@material-ui/core';import{getPlacesData}from'./api';import Header from'./componentes/Header/Header';import List from'./componentes/List/List';import Map from'./componentes/Map/Map';import Places from'./componentes/Places/Places';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),places=_useState.places,setPlaces=_useState.setPlaces;var _useState2=useState({}),coordinates=_useState2.coordinates,setCoordinates=_useState2.setCoordinates;var _useState3=useState({}),bounds=_useState3.bounds,setBounds=_useState3.setBounds;useEffect(function(){navigator.geolocation.getCurrentPosition(function(_ref){var _ref$coords=_ref.coords,latitude=_ref$coords.latitude,longitude=_ref$coords.longitude;setCoordinates({lat:latitude,lng:longitude});});},[]);useEffect(function(){getPlacesData(bounds.sw,bounds.ne).then(function(data){console.log(data);setPlaces(data);});},[coordinates,bounds]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,style:{width:'100%'},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(List,{places:places})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Map,{setCoordinates:setCoordinates,setBounds:setBounds,coordinates:coordinates})})]})]});};export default App;","map":{"version":3,"sources":["/workspace/horizontes/src/App.js"],"names":["React","useState","useEffect","CssBaseline","Grid","getPlacesData","Header","List","Map","Places","App","places","setPlaces","coordinates","setCoordinates","bounds","setBounds","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lat","lng","sw","ne","then","data","console","log","width"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,IAAtB,KAAkC,mBAAlC,CAEA,OAASC,aAAT,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,C,6IAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACd,cAA4BT,QAAQ,CAAC,EAAD,CAApC,CAAOU,MAAP,WAAOA,MAAP,CAAeC,SAAf,WAAeA,SAAf,CAEA,eAAsCX,QAAQ,CAAC,EAAD,CAA9C,CAAOY,WAAP,YAAOA,WAAP,CAAoBC,cAApB,YAAoBA,cAApB,CACA,eAA4Bb,QAAQ,CAAC,EAAD,CAApC,CAAOc,MAAP,YAAOA,MAAP,CAAeC,SAAf,YAAeA,SAAf,CAEAd,SAAS,CAAC,UAAM,CACZe,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,cAAuC,sBAApCC,MAAoC,CAA3BC,QAA2B,aAA3BA,QAA2B,CAAjBC,SAAiB,aAAjBA,SAAiB,CAC5ER,cAAc,CAAC,CAAES,GAAG,CAAEF,QAAP,CAAiBG,GAAG,CAAEF,SAAtB,CAAD,CAAd,CACH,CAFD,EAGH,CAJQ,CAIN,EAJM,CAAT,CAMApB,SAAS,CAAC,UAAM,CACZG,aAAa,CAACU,MAAM,CAACU,EAAR,CAAYV,MAAM,CAACW,EAAnB,CAAb,CACKC,IADL,CACU,SAACC,IAAD,CAAU,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACAhB,SAAS,CAACgB,IAAD,CAAT,CACH,CAJL,EAKH,CANQ,CAMN,CAACf,WAAD,CAAcE,MAAd,CANM,CAAT,CAQA,mBACI,wCACI,KAAC,WAAD,IADJ,cAEI,KAAC,MAAD,IAFJ,cAGI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CAA4B,KAAK,CAAE,CAAEgB,KAAK,CAAE,MAAT,CAAnC,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBACI,KAAC,IAAD,EAAM,MAAM,CAAEpB,MAAd,EADJ,EADJ,cAII,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBACI,KAAC,GAAD,EACI,cAAc,CAAEG,cADpB,CAEI,SAAS,CAAEE,SAFf,CAGI,WAAW,CAAEH,WAHjB,EADJ,EAJJ,GAHJ,GADJ,CAkBH,CAtCD,CAwCA,cAAeH,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CssBaseline, Grid } from '@material-ui/core';\r\n\r\nimport { getPlacesData } from './api';\r\nimport Header from './componentes/Header/Header';\r\nimport List from './componentes/List/List';\r\nimport Map from './componentes/Map/Map';\r\nimport Places from './componentes/Places/Places';\r\n\r\nconst App = () => {\r\n    const {places, setPlaces} = useState([]);\r\n\r\n    const {coordinates, setCoordinates} = useState({});\r\n    const {bounds, setBounds} = useState({});\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(({ coords: {latitude, longitude} }) => {\r\n            setCoordinates({ lat: latitude, lng: longitude});\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getPlacesData(bounds.sw, bounds.ne)\r\n            .then((data) => {\r\n                console.log(data);\r\n                setPlaces(data);\r\n            })\r\n    }, [coordinates, bounds]);\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Header />\r\n            <Grid container spacing={3} style={{ width: '100%'}}>\r\n                <Grid item xs={12} md={4}>\r\n                    <List places={places}/>\r\n                </Grid>                \r\n                <Grid item xs={12} md={4}>\r\n                    <Map\r\n                        setCoordinates={setCoordinates}\r\n                        setBounds={setBounds}\r\n                        coordinates={coordinates}\r\n                    />\r\n                </Grid>                \r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}