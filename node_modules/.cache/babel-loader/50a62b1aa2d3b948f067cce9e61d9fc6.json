{"ast":null,"code":"import React from\"react\";import{GoogleMapReact}from\"google-map-react\";import{Paper,Typography,useMediaQuery}from'@mateial-ui/core';import LocationOnOutlinedIcon from\"@material-ui/icons/locationOnOutlined\";import{Rating}from\"@material-ui/lab/Rating\";import useStyles from'./styles';import{Image}from\"@material-ui/icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Map=function Map(_ref){var _places;var setCoordinates=_ref.setCoordinates,setBounds=_ref.setBounds,coordinates=_ref.coordinates;var classes=useStyles();var isMobile=useMediaQuery('(min-width:600px)');return/*#__PURE__*/_jsx(\"div\",{className:\"classes.mapContainer\",children:/*#__PURE__*/_jsxs(GoogleMapReact,{children:[\"bootstrapURLKeys=\",{key:'AIzaSyDBofYLbkqHGxrhHaUMp7zr2B4J9ZE0l0Y'},\"defaultCenter=\",coordinates,\"center=\",coordinates,\"defaultZoom=\",14,\"margin=\",[50,50,50,50],\"options=\",'',\"onChange=\",function(e){setCoordinates({lat:e.center.lat,lng:e.center.lng});setBounds({ne:e.marginBounds.ne,sw:e.marginBounds.sw});},\"onChildClick=\",'',(_places=places)===null||_places===void 0?void 0:_places.map(function(place,i){/*#__PURE__*/_jsx(\"div\",{className:classes.markerContainer,lat:Number(place.latitude),lng:Number(place.langitude),children:isMobile?/*#__PURE__*/_jsx(LocationOnOutlinedIcon,{color:\"primary\",\"font-size\":\"large\"}):/*#__PURE__*/_jsxs(Paper,{elevetion:3,className:classes.paper,children:[/*#__PURE__*/_jsx(Typography,{className:classes.typography,variant:\"subtitle2\",guttorButton:true,children:place.name}),/*#__PURE__*/_jsx(Image,{className:classes.pointer,src:place.photo?place.photos.images.url:'https://',alt:place.name}),/*#__PURE__*/_jsx(Rating,{size:\"small\",value:Number(place.rating),readOnly:true})]})},i);})]})});};export default Map;","map":{"version":3,"sources":["/workspace/horizontes/src/componentes/Map/Map.jsx"],"names":["React","GoogleMapReact","Paper","Typography","useMediaQuery","LocationOnOutlinedIcon","Rating","useStyles","Image","Map","setCoordinates","setBounds","coordinates","classes","isMobile","key","e","lat","center","lng","ne","marginBounds","sw","places","map","place","i","markerContainer","Number","latitude","langitude","paper","typography","name","pointer","photo","photos","images","url","rating"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,OAASC,KAAT,CAAgBC,UAAhB,CAA4BC,aAA5B,KAAiD,kBAAjD,CACA,MAAOC,CAAAA,sBAAP,KAAmC,uCAAnC,CACA,OAASC,MAAT,KAAuB,yBAAvB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,OAASC,KAAT,KAAsB,oBAAtB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAgD,gBAA7CC,CAAAA,cAA6C,MAA7CA,cAA6C,CAA7BC,SAA6B,MAA7BA,SAA6B,CAAlBC,WAAkB,MAAlBA,WAAkB,CACxD,GAAMC,CAAAA,OAAO,CAAGN,SAAS,EAAzB,CACA,GAAMO,CAAAA,QAAQ,CAAGV,aAAa,CAAC,mBAAD,CAA9B,CAEA,mBACI,YAAK,SAAS,CAAC,sBAAf,uBACI,MAAC,cAAD,gCACsB,CAAEW,GAAG,CAAE,yCAAP,CADtB,kBAEmBH,WAFnB,WAGYA,WAHZ,gBAIiB,EAJjB,WAKY,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAAa,EAAb,CALZ,YAMa,EANb,aAOc,SAACI,CAAD,CAAM,CACZN,cAAc,CAAC,CAAEO,GAAG,CAAED,CAAC,CAACE,MAAF,CAASD,GAAhB,CAAqBE,GAAG,CAAEH,CAAC,CAACE,MAAF,CAASC,GAAnC,CAAD,CAAd,CACAR,SAAS,CAAC,CAAES,EAAE,CAAEJ,CAAC,CAACK,YAAF,CAAeD,EAArB,CAAyBE,EAAE,CAAEN,CAAC,CAACK,YAAF,CAAeC,EAA5C,CAAD,CAAT,CACH,CAVL,iBAWkB,EAXlB,UAaKC,MAbL,kCAaK,QAAQC,GAAR,CAAY,SAACC,KAAD,CAAQC,CAAR,CAAc,CACvB,yBAAK,SAAS,CAAEb,OAAO,CAACc,eAAxB,CAAyC,GAAG,CAAEC,MAAM,CAACH,KAAK,CAACI,QAAP,CAApD,CAAsE,GAAG,CAAED,MAAM,CAACH,KAAK,CAACK,SAAP,CAAjF,UAEQhB,QAAQ,cACJ,KAAC,sBAAD,EAAwB,KAAK,CAAC,SAA9B,CAAwC,YAAU,OAAlD,EADI,cAGJ,MAAC,KAAD,EAAO,SAAS,CAAE,CAAlB,CAAqB,SAAS,CAAED,OAAO,CAACkB,KAAxC,wBACI,KAAC,UAAD,EAAY,SAAS,CAAElB,OAAO,CAACmB,UAA/B,CAA2C,OAAO,CAAC,WAAnD,CAA+D,YAAY,KAA3E,UACKP,KAAK,CAACQ,IADX,EADJ,cAII,KAAC,KAAD,EAAO,SAAS,CAAEpB,OAAO,CAACqB,OAA1B,CAAmC,GAAG,CAAET,KAAK,CAACU,KAAN,CAAcV,KAAK,CAACW,MAAN,CAAaC,MAAb,CAAoBC,GAAlC,CAAwC,UAAhF,CAA4F,GAAG,CAAEb,KAAK,CAACQ,IAAvG,EAJJ,cAKI,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,CAAqB,KAAK,CAAEL,MAAM,CAACH,KAAK,CAACc,MAAP,CAAlC,CAAkD,QAAQ,KAA1D,EALJ,GALZ,EAAyGb,CAAzG,EAeH,CAhBA,CAbL,GADJ,EADJ,CAoCH,CAxCD,CA0CA,cAAejB,CAAAA,GAAf","sourcesContent":["import React from \"react\";\r\nimport { GoogleMapReact } from \"google-map-react\";\r\nimport { Paper, Typography, useMediaQuery } from '@mateial-ui/core';\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/locationOnOutlined\";\r\nimport { Rating } from \"@material-ui/lab/Rating\";\r\n\r\nimport useStyles from './styles';\r\nimport { Image } from \"@material-ui/icons\";\r\n\r\nconst Map = ({ setCoordinates, setBounds, coordinates }) => {\r\n    const classes = useStyles();\r\n    const isMobile = useMediaQuery('(min-width:600px)');\r\n    \r\n    return (\r\n        <div className=\"classes.mapContainer\">\r\n            <GoogleMapReact>\r\n                bootstrapURLKeys={{ key: 'AIzaSyDBofYLbkqHGxrhHaUMp7zr2B4J9ZE0l0Y'}}\r\n                defaultCenter={coordinates}\r\n                center={coordinates}\r\n                defaultZoom={14}\r\n                margin={[50, 50, 50, 50]}\r\n                options={''}\r\n                onChange={(e) =>{\r\n                    setCoordinates({ lat: e.center.lat, lng: e.center.lng });\r\n                    setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw});\r\n                }}\r\n                onChildClick={''}\r\n\r\n                {places?.map((place, i) => {\r\n                    <div className={classes.markerContainer} lat={Number(place.latitude)} lng={Number(place.langitude)} key={i}>\r\n                        {\r\n                            isMobile ? (\r\n                                <LocationOnOutlinedIcon color=\"primary\" font-size=\"large\" />\r\n                            ) : (\r\n                                <Paper elevetion={3} className={classes.paper}>\r\n                                    <Typography className={classes.typography} variant=\"subtitle2\" guttorButton>\r\n                                        {place.name}\r\n                                    </Typography>\r\n                                    <Image className={classes.pointer} src={place.photo ? place.photos.images.url : 'https://'} alt={place.name} />\r\n                                    <Rating size=\"small\" value={Number(place.rating)} readOnly />\r\n                                </Paper>\r\n                            )\r\n                        }\r\n                    </div>\r\n                })}\r\n                \r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}